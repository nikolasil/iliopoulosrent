name: Deploy Pipeline

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: nikolasil/iliopoulosrent-frontend
  CONTAINER_NAME: iliopoulosrent-frontend
  NEXTAUTH_URL: https://iliopoulosrent.com
  NEXT_PUBLIC_SITE_URL: https://iliopoulosrent.com
  SHORT_SHA: ${{ github.sha }}

jobs:
  build:
    name: üèóÔ∏è Build Docker Image
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/arm64/v8 \
            --file Dockerfile \
            --tag $IMAGE_NAME:latest \
            --tag $IMAGE_NAME:${SHORT_SHA::7} \
            --output type=docker .

      - name: Save and compress Docker image
        run: |
          docker save $IMAGE_NAME:latest | gzip > ${{ runner.temp }}/image-latest.tar.gz
          docker save $IMAGE_NAME:${SHORT_SHA::7} | gzip > ${{ runner.temp }}/image-sha.tar.gz

      - name: Upload Docker image artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            ${{ runner.temp }}/image-latest.tar.gz
            ${{ runner.temp }}/image-sha.tar.gz

  push:
    name: üöÄ Push to Docker Hub
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Download Docker image artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Decompress and load Docker images
        run: |
          gunzip -c image-latest.tar.gz | docker load
          gunzip -c image-sha.tar.gz | docker load

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${SHORT_SHA::7}

  deploy:
    name: ‚öôÔ∏è Deploy to EC2
    runs-on: ubuntu-22.04
    needs: push

    steps:
      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 44.200.151.12
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -eo pipefail

            IMAGE_TAG=${SHORT_SHA::7}

            echo "Pulling new image..."
            sudo docker pull $IMAGE_NAME:$IMAGE_TAG

            echo "Stopping current container (if exists)..."
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true

            echo "Starting new container..."
            if ! sudo docker run -d \
              --name $CONTAINER_NAME \
              -e NEXTAUTH_URL=$NEXTAUTH_URL \
              -e NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL \
              -p 8081:3000 \
              $IMAGE_NAME:$IMAGE_TAG; then

              echo "‚ùå Failed to start new container! Attempting rollback to 'latest'..."
              sudo docker pull $IMAGE_NAME:latest
              sudo docker run -d \
                --name $CONTAINER_NAME \
                -e NEXTAUTH_URL=$NEXTAUTH_URL \
                -e NEXT_PUBLIC_SITE_URL=$NEXT_PUBLIC_SITE_URL \
                -p 8081:3000 \
                $IMAGE_NAME:latest
            fi
